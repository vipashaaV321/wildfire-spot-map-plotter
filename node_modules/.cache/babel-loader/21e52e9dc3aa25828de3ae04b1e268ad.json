{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\react\\\\wildfire-data-visulization\\\\src\\\\components\\\\map.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport LocationMarker from \"./LocationMarker\";\nimport LocationInfoBox from \"./LocationInfoBox\";\n\nconst Map = ({\n  eventData,\n  center,\n  zoom\n}) => {\n  _s();\n\n  const [locationInfo, setLocationInfo] = useState(null);\n  const markers = eventData.map(ev => {\n    if (ev.categories[0].id === 8) {\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => setLocationInfo({\n          id: ev.id,\n          title: ev.title\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"\"\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      children: markers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), locationInfo && /*#__PURE__*/_jsxDEV(LocationInfoBox, {\n      info: locationInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"12TQ7nOZavxYGEoGTr51i7Gzxxc=\");\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 42.3265,\n    lng: -122.8756\n  },\n  zoom: 6\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/react/wildfire-data-visulization/src/components/map.js"],"names":["useState","React","GoogleMapReact","LocationMarker","LocationInfoBox","Map","eventData","center","zoom","locationInfo","setLocationInfo","markers","map","ev","categories","id","geometries","coordinates","title","key","defaultProps","lat","lng"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAD,KAAiC;AAAA;;AAC3C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMW,OAAO,GAAGL,SAAS,CAACM,GAAV,CAAcC,EAAE,IAAI;AAClC,QAAIA,EAAE,CAACC,UAAH,CAAc,CAAd,EAAiBC,EAAjB,KAAwB,CAA5B,EAA+B;AAC7B,0BACE,QAAC,cAAD;AACE,QAAA,GAAG,EAAEF,EAAE,CAACG,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CADP;AAEE,QAAA,GAAG,EAAEJ,EAAE,CAACG,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CAFP;AAGE,QAAA,OAAO,EAAE,MAAMP,eAAe,CAAC;AAAEK,UAAAA,EAAE,EAAEF,EAAE,CAACE,EAAT;AAAaG,UAAAA,KAAK,EAAEL,EAAE,CAACK;AAAvB,SAAD;AAHhC;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;AACD,WAAO,IAAP;AACD,GAXe,CAAhB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,gBAAgB,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OADpB;AAEE,MAAA,aAAa,EAAEZ,MAFjB;AAGE,MAAA,WAAW,EAAEC,IAHf;AAAA,gBAKGG;AALH;AAAA;AAAA;AAAA;AAAA,YADF,EAQGF,YAAY,iBAAI,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YARnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5BD;;GAAMJ,G;;KAAAA,G;AA8BNA,GAAG,CAACe,YAAJ,GAAmB;AACjBb,EAAAA,MAAM,EAAE;AACNc,IAAAA,GAAG,EAAE,OADC;AAENC,IAAAA,GAAG,EAAE,CAAC;AAFA,GADS;AAKjBd,EAAAA,IAAI,EAAE;AALW,CAAnB;AAQA,eAAeH,GAAf","sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport LocationInfoBox from \"./LocationInfoBox\";\r\n\r\nconst Map = ({ eventData, center, zoom }) => {\r\n  const [locationInfo, setLocationInfo] = useState(null);\r\n\r\n  const markers = eventData.map(ev => {\r\n    if (ev.categories[0].id === 8) {\r\n      return (\r\n        <LocationMarker\r\n          lat={ev.geometries[0].coordinates[1]}\r\n          lng={ev.geometries[0].coordinates[0]}\r\n          onClick={() => setLocationInfo({ id: ev.id, title: ev.title })}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"\" }}\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n        {markers}\r\n      </GoogleMapReact>\r\n      {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nMap.defaultProps = {\r\n  center: {\r\n    lat: 42.3265,\r\n    lng: -122.8756\r\n  },\r\n  zoom: 6\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}